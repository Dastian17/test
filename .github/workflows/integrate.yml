name: Run Jest coverage for each commit

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Run Jest coverage for each commit
        run: |
          commit_list="${{ steps.commits.outputs.commit_list }}"
          for commit in $(git rev-list ${{ github.event.before }}..${{ github.sha }}); do
            git checkout $commit
            echo "Running tests for commit $commit"
            npm install
            npm run test -- --coverage
          done

      - name: Generate coverage report
        run: |
          coverage_output=$(npm run test -- --coverage | tail -n 4)

          get_percentage() {
            echo "$coverage_output" | awk -v pattern="$1" '$0 ~ pattern {print $3}' | tr -d '%'
          }

          get_covered_total() {
            echo "$coverage_output" | awk -v pattern="$1" '$0 ~ pattern {print $4}'
          }

          get_emoji() {
            percentage=$1
            if [ "$percentage" = "100" ]; then
              echo "🟢"
            else
              echo "❔"
            fi
          }

          # Obtener porcentajes
          statements_pct=$(get_percentage 'Statements')
          branches_pct=$(get_percentage 'Branches')
          functions_pct=$(get_percentage 'Functions')
          lines_pct=$(get_percentage 'Lines')

          # Crear el reporte con formato de tabla bien alineada
          report="### Coverage report\n\n"
          report+="| St. | Category   | Percentage | Covered / Total |\n"
          report+="|:---:|------------|:----------:|:---------------:|\n"
          report+="| $(get_emoji $statements_pct) | Statements | $statements_pct% | $(get_covered_total 'Statements') |\n"
          report+="| $(get_emoji $branches_pct)   | Branches   | $branches_pct%   | $(get_covered_total 'Branches')   |\n"
          report+="| $(get_emoji $functions_pct)  | Functions  | $functions_pct%  | $(get_covered_total 'Functions')  |\n"
          report+="| $(get_emoji $lines_pct)      | Lines      | $lines_pct%      | $(get_covered_total 'Lines')      |\n"
          report+="\n### Test suite run success"

          # Guardar el reporte
          echo "$report" > coverage-report.md

      - name: Create Pull Request comment with coverage report
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: coverage-report.md
