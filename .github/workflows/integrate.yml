name: CI Workflow for Each Commit with Jest Coverage

on:
  push:
    branches:
      - '**'

permissions:
  contents: write  # Permiso para escribir en el repo (necesario para hacer comentarios)

jobs:
  run-for-each-commit:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Usa la versión de Node.js que prefieras

      # Instalar dependencias
      - name: Install dependencies
        run: npm install

      # Generar el reporte de cobertura de Jest
      - name: Jest coverage report
        uses: ArtiomTr/jest-coverage-report-action@v2.2.6
        id: coverage
        with:
          output: report-markdown, comment

      # Publicar el reporte de cobertura en un comentario en el commit
      - name: Post coverage report to commit
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: ${{ steps.coverage.outputs.report }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Usar el token para autenticar

      # # Post success comment for each commit (opcional si también quieres un mensaje de éxito aparte del reporte de cobertura)
      # - name: Comment on each commit
      #   uses: actions/github-script@v6
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const commits = ${{ toJson(github.event.commits) }};
      #       for (const commit of commits) {
      #         github.rest.repos.createCommitComment({
      #           owner: context.repo.owner,
      #           repo: context.repo.repo,
      #           commit_sha: commit.id,
      #           body: `✅ CI passed successfully for commit: ${commit.id}\n\n### Coverage Report:\n\n${{ steps.coverage.outputs.report }}`
      #         });
      #       }
