name: CI Workflow with Jest Coverage

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

permissions:
  contents: write
  pull-requests: write

jobs:
  test-and-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm ci

      - name: Run tests and generate coverage
        run: npm run test-once
        continue-on-error: true

      - name: Check coverage output
        run: |
          if [ -f coverage/coverage-summary.json ]; then
            echo "Coverage summary file exists"
          else
            echo "Coverage summary file does not exist"
            ls -R coverage
          fi

      - name: Generate coverage report
        run: |
          if [ -f coverage/coverage-summary.json ]; then
            coverage_summary=$(cat coverage/coverage-summary.json)
            statements=$(echo $coverage_summary | jq -r '.total.statements.pct')
            branches=$(echo $coverage_summary | jq -r '.total.branches.pct')
            functions=$(echo $coverage_summary | jq -r '.total.functions.pct')
            lines=$(echo $coverage_summary | jq -r '.total.lines.pct')
          else
            echo "Coverage summary file not found. Using placeholder values."
            statements="N/A"
            branches="N/A"
            functions="N/A"
            lines="N/A"
          fi

          get_emoji() {
            if [ "$1" = "100" ]; then
              echo "🟢"
            elif [ "$1" = "N/A" ]; then
              echo "❓"
            else
              echo "❔"
            fi
          }

          report="### Coverage Report\n\n"
          report+="| Category | Coverage | Percentage |\n"
          report+="|----------|----------|------------|\n"
          report+="| Statements | $(get_emoji $statements) | $statements% |\n"
          report+="| Branches | $(get_emoji $branches) | $branches% |\n"
          report+="| Functions | $(get_emoji $functions) | $functions% |\n"
          report+="| Lines | $(get_emoji $lines) | $lines% |\n"

          echo "$report" > coverage-report.md

      - name: Comment PR
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs')
            const report = fs.readFileSync('coverage-report.md', 'utf8')
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            })

      - name: Comment Commit
        if: github.event_name == 'push'
        run: |
          commit_sha=${{ github.sha }}
          report=$(cat coverage-report.md)
          gh api repos/${{ github.repository }}/commits/$commit_sha/comments \
            -f body="$report"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}