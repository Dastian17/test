name: CI Workflow for Each Commit with Jest Coverage

on:
  push:
    branches:
      - '**'

permissions:
  contents: write  # Permiso para escribir en el repo (necesario para hacer comentarios)

jobs:
  run-for-each-commit:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Asegurarse de que todos los commits est√°n disponibles
     # Obtener los commits del evento push
      - name: Get commits from push
        id: commits
        run: echo "::set-output name=commit_list::$(jq -r '.[].id' <<< '${{ toJson(github.event.commits) }}')"

      # Instalar GitHub CLI
      - name: Install GitHub CLI
        run: |
          sudo apt-get install gh
      - name: Install dependencies
        run: npm ci
      - name: Run Unit Tests
        run: npm run test-once
      - name: Jest coverage report
        uses: ArtiomTr/jest-coverage-report-action@v2.2.6
        id: coverage
        with:
            output: report-markdown, comment
      # Iterar por cada commit y generar el reporte de cobertura
      - name: Run Jest coverage for each commit
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Configurar el token para GitHub CLI
        run: |
          IFS=',' read -ra commit_list <<< "$commit_list"
          
          for commit in "${commit_list[@]}"; do
            echo "Running actions for commit: $commit"
            
            # Hacer checkout de cada commit
            git checkout $commit
            
            # Instalar dependencias
            npm ci  # Usa ci para asegurar que las dependencias son las mismas
            
            # Ejecutar pruebas
            npm run test-once
            
            # Generar el reporte de cobertura
            npx jest --coverage
            
            # Guardar el reporte de cobertura como Markdown
            COVERAGE=$(npx jest --coverage --coverageReporters=text-summary | tail -n +2)
            
            # Hacer un comentario en el commit
            gh api repos/${{ github.repository }}/commits/$commit/comments -f body="### Jest Coverage Report for commit $commit: \n\n$COVERAGE"
          done
        shell: bash
